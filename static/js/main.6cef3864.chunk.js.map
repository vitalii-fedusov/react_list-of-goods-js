{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverseIsActive","setReverseIsActive","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,OAC5BC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EA7BR,SAA0BC,EAA1B,GAAkE,IAA/BL,EAA8B,EAA9BA,UAAWE,EAAmB,EAAnBA,gBACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAElC,QACE,OAAO,MAKXE,GACFI,EAAcK,UAGTL,EAOcM,CACnBjB,EAAiB,CAAEK,YAAWE,oBAGhC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYhB,IAAcJ,IAJ9B,iCAUA,wBACEkB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYhB,IAAcH,IAJ9B,4BAWEK,EAEI,wBACEY,QAAS,WACPX,GAAmB,GACnBF,EAAaD,IAEfe,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAAad,IAPjB,qBAcA,wBACEY,QAAS,WACPX,GAAmB,GACnBF,EAAaD,IAEfe,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAAad,IAPjB,sBAgBW,KAAdF,GAAoBE,IAEjB,wBACEY,QAAS,WACPb,EAAa,IACbE,GAAmB,IAErBY,KAAK,SACLF,UAAU,4BANZ,sBAcR,6BACGT,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAIL,UAAU,OAAkB,UAAQ,OAAxC,SACGK,GADuBA,YC9HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6cef3864.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, reverseIsActive }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseIsActive) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseIsActive, setReverseIsActive] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, reverseIsActive },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        {\n          reverseIsActive\n            ? (\n              <button\n                onClick={() => {\n                  setReverseIsActive(false);\n                  setSortField(sortField);\n                }}\n                type=\"button\"\n                className={cn('button is-warning', {\n                  'is-light': !reverseIsActive,\n                })}\n              >\n                Reverse\n              </button>\n            )\n            : (\n              <button\n                onClick={() => {\n                  setReverseIsActive(true);\n                  setSortField(sortField);\n                }}\n                type=\"button\"\n                className={cn('button is-warning', {\n                  'is-light': !reverseIsActive,\n                })}\n              >\n                Reverse\n              </button>\n            )\n        }\n\n        {\n          (sortField !== '' || reverseIsActive)\n            && (\n              <button\n                onClick={() => {\n                  setSortField('');\n                  setReverseIsActive(false);\n                }}\n                type=\"button\"\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li className=\"Good\" key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}